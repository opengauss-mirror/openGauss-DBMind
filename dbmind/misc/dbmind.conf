# Copyright (c) 2020 Huawei Technologies Co.,Ltd.
#
# openGauss is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#
#          http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.

[TSDB]
name = prometheus # The type of time-series database. Options: prometheus, influxdb, ignore. DBMind will ignore TSDB if set this parameter to ignore, the following fields of this section will not be effective.
host = # Address of time-series database.
port = # Port to connect to time-series database.
dbname = (null) # The database name of the time-series database, required when using InfluxDB.
username = (null) # User name to connect to time-series database.
password = (null) # Password to connect to time-series database.
ssl_certfile = (null) # The certificate file for ssl connections.
ssl_keyfile = (null) # Certificate private key file.
ssl_keyfile_password = (null) # Password for ssl keyfile.
ssl_ca_file = (null)  # CA certificate to validate requests.

[METADATABASE]
dbtype = sqlite # Database type. Options: sqlite, opengauss, postgresql.
host = # Address of meta-data database.
port = # Port to connect to meta-data database.
username = # User name to connect to meta-data database.
password = (null) # Password to connect to meta-data database.
database = # Database name to connect to meta-data database.
ssl_mode = prefer # The ssl mode for ssl connections. Options: disable, prefer, verify-ca.

[WORKER]
process_num = 0  # Number of worker processes on a local node. Less than or equal to zero means adaptive.

[AGENT]
distribute_mode = (null) # The switch of DBMind distributed deployment mode. DBMind will start as a stateless microservice if set this parameter to true, the following fields of this section will not be effective, the token mechanism will be turned off automatically.
master_url =  # You don't need to configure this parameter, then the autodiscovery mode will be started. And all agents registered in TSDB will be found, but you need to configure a set of unified username/password/SSL connection information. Otherwise, you can type the agent URL of the master node. e.g., https://127.0.0.1:9187, if you have multiple sets of clusters, you should separated them by comma (,).
username = # Username to login the monitoring database. Credential for agent. If you configure and monitor multiple sets of clusters, and the usernames and passwords of these clusters are different, you need to enter multiple configuration usernames, which are separated by commas (,), and need to correspond to the above master_url option one by one.
password = # Password to login the monitoring database. Credential for agent. If you configure to monitor multiple clusters, they need to be separated by comma(,). The specific configuration method is the same as the above parameters.
ssl_certfile = (null) # The certificate file for ssl connections. This is optional. If you configure to monitor multiple clusters, they need to be separated by comma(,). The specific configuration method is the same as the above parameters.
ssl_keyfile = (null) # Certificate private key file. This is optional. If you configure to monitor multiple clusters, they need to be separated by comma(,). The specific configuration method is the same as the above parameters.
ssl_keyfile_password = (null) # Password for ssl keyfile. This is optional. If you configure to monitor multiple clusters, they need to be separated by comma(,). The specific configuration method is the same as the above parameters.
ssl_ca_file = (null)  # CA certificate to validate requests. This is optional. If you configure to monitor multiple clusters, they need to be separated by comma(,). The specific configuration method is the same as the above parameters.

[TIMED_TASK_LIST]
explanation = Configure scheduled tasks including start tasks and intervals
current_support_task_list = List of currently supported tasks:
task1 = anomaly_detection          # 1. Monitor for abnormal metrics.
task2 = discard_expired_results    # 2. Enabled by default, does not support user management(avoid disk bloat).
task3 = knob_recommend             # 3. Recommend appropriate parameter based on current business.
task4 = slow_query_killer          # 4. kill timeout SQL(The default timeout time is 60 seconds).
task5 = slow_query_diagnosis       # 5. Diagnose the root cause of SLOW-QUERY based on its context.
task6 = cluster_diagnose           # 6. Diagnose the most likely root cause of cluster alarms.
task7 = agent_update_detect        # 7. Automatically update anomaly detectors when agents updated are detected.
task8 = calibrate_security_metrics # 8. Calibrate security metrics mentioned by security_scenarios.yml
task9 = check_security_metrics     # 9. Check security metrics mentioned by security_scenarios.yml
task10 = update_statistics         # 10. Automatically update statistics for specified metrics.

[TIMED_TASK]
TASK = discard_expired_results, anomaly_detection, cluster_diagnose, agent_update_detect, update_statistics # select the scheduled task to start, separated by ',', see options in [TIMED_TASK_LIST].
anomaly_detection_interval = 180  # unit: second.
slow_query_diagnosis_interval = 120  # unit: second.
knob_recommend_interval = 3600  # unit: second.
slow_query_killer_interval = 30  # unit: second.
cluster_diagnose_interval = 30  # unit: second.
discard_expired_results_interval = 3600  # unit: second.
agent_update_detect_interval = 30  #unit: second.
calibrate_security_metrics_interval = 600 # unit: second.
check_security_metrics_interval = 600 # unit: second.
update_statistic_interval = 1800  #unit: second.

[WEB-SERVICE]
ssl = true # Using secure protocol by default, users must provide a certificate path. Otherwise, the DBMind process cannot start.
host = 127.0.0.1  # Which host to bind for web service. '0.0.0.0' means to bind all.
port = 8080  # Port to listen for web service.
ssl_certfile = (null) # The certificate file for ssl connections.
ssl_keyfile = (null) # Certificate private key file.
ssl_keyfile_password = (null) # Password for ssl keyfile.
ssl_ca_file = (null)  # CA certificate to validate requests.

[LOG]
maxbytes = 10485760 # Default is 10Mb. Maximum size of a single log file. If maxbytes is zero, the file grows indefinitely.
backupcount = 1 # Number of backups of log files.
level = INFO  # Options: DEBUG, INFO, WARNING, ERROR.
log_directory = logs  # Directory to log.

[COMMENT]
worker = The form of executing compute-intensive tasks. Tasks can be executed locally or distributed to multiple nodes for execution.
tsdb = Configure the data source for time series data, which come from monitoring the openGauss instance.
metadatabase = Configure the database to record meta-data, which the database can store meta-data for the forecasting and diagnosis process. The database should be an openGauss instance.
self-monitoring = Set up parameters for monitoring and diagnosing openGauss instance.
self-optimization = Set up parameters for openGauss optimization.

[IP_MAP]
ip_map = (null) # For environments where the data ip and management ip are inconsistent, you need to provide the correspondence.The following is an example of a cluster with one primary and two standby: "primary_data_ip:primary_management_ip,standby1_data_ip:standby1_management_ip,standby2_data_ip:standby2_management_ip"
